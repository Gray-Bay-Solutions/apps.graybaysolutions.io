# Nginx configuration for Graybay Monitoring
# Save this as: /etc/nginx/sites-available/graybay-monitoring
# Then create symlink: sudo ln -s /etc/nginx/sites-available/graybay-monitoring /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;

    # Redirect HTTP to HTTPS (uncomment after SSL setup)
    # return 301 https://$server_name$request_uri;

    # For initial setup without SSL, proxy directly to the app
    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Static files optimization
    location /_next/static {
        proxy_pass http://localhost:4000;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        add_header Cache-Control "public, immutable, max-age=31536000";
    }

    # Health check endpoint
    location /api/health {
        proxy_pass http://localhost:4000;
        access_log off;
    }
}

# HTTPS configuration (uncomment after setting up SSL with Let's Encrypt)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#     location / {
#         proxy_pass http://localhost:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         proxy_read_timeout 86400;
#     }
#
#     location /_next/static {
#         proxy_pass http://localhost:4000;
#         proxy_cache_valid 200 302 10m;
#         proxy_cache_valid 404 1m;
#         add_header Cache-Control "public, immutable, max-age=31536000";
#     }
#
#     location /api/health {
#         proxy_pass http://localhost:4000;
#         access_log off;
#     }
# } 